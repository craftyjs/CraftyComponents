{% extends "::base.html.twig" %}

{% block content %}
<div class="content add-new">
	<div class="page-header">
		<div class="row">
		  <div class="span11">
		    <h1>Add new component</h1>
		  </div>
		  <div class="span3">
		    <a href="{{ path('fwm_crafty_components_list') }}" class="btn large primary">New components</a>
		  </div>
		</div>
	</div>
	<div class="row">
	  <div class="span14">
      	<form action="{{ path('fwm_crafty_components_add_new') }}" method="post" class="">
                  <input class="span9" type="text" name="url" placeholder="git://github.com/xxx/yyy.git">
                  <button class="btn large" type="submit">Add component repository (github)</button>
        </form>

        {% if errors is defined %}
            {% for error in errors %}
            <div class="alert-message error">
              <a class="close" href="#">Ã—</a>
              <p><strong>Ups!</strong> {{ error }}</p>
            </div>
            {% endfor %}
        {% endif %}

        <h5>Github repository link</h5>
        <p>
            Your component must be hosted on <a href="https://www.github.com" target="_blank">Github.com</a> - don't worry it's free for open source projects.  
        </p>
        <p>To add a component to our database, you need to specify a link to it - in the format: git://github.com/author/componentName.git</p>

        <h2>OR use Github Post-Receive URL option</h2>
        <h5>Our Post-Receive URL</h5>
        <pre class="module-usage print">{{ url('fwm_crafty_components_add_new') }}</pre>
        <div class="post-receive">
            <img class="one" src="{{asset('/bundles/fwmcraftycomponents/images/post-recive-one.png')}}" />
            <img class="two" src="{{asset('/bundles/fwmcraftycomponents/images/post-recive-two.png')}}" />
        </div>
	  </div>
	</div>
	<div class="row">
	  	<div class="span14 package-example">
	  	<h3>package.json</h3>
	  	<p>
	  		The purpose of this file is to specify meta data for your module. The format is inspired by the new jquery plugin system and extended a bit. Package.js must be valid with example.
	  		Be sure to validate your package.json as the slightest syntax error (like an extra comma) will not allow you to add the component. <a href="http://jsonlint.com/" target="_blank">JSONlint</a> is an online JSON Validator.
	  	</p>
	  		<pre class="module-usage print">
{
    "name": "crafty",
    "version": "0.4.4",
    "title": "Crafty game framework",
    "author": {
        "name": "Louis Stowasser",
        "url": "http://craftyjs.com/"
    },
    "licenses": [
        {
            "type": "MIT",
            "url": "http://www.opensource.org/licenses/mit-license.php"
        },
        {
            "type": "GPL",
            "url": "http://www.opensource.org/licenses/gpl-license.php"
        }
    ],
    "description": "Crafty is a modern component and event based framework for javascript games that targets DOM and canvas.",
    "keywords": [
        "framework",
        "javascript"
    ],
    "jsfiddle" : "http://jsfiddle.net/zalun/NmudS/embedded/", 
    "homepage": "https://github.com/louisstow/Crafty",
    "files": [
        "src/license.txt", 
        "src/core.js",
        "src/intro.js", 
        "src/HashMap.js",
        "src/2D.js", 
        "src/collision.js", 
        "src/DOM.js",
        "src/extensions.js",
        "src/canvas.js",
        "src/controls.js",
        "src/animation.js",
        "src/sprite.js",
        "src/drawing.js", 
        "src/isometric.js", 
        "src/particles.js", 
        "src/sound.js",
        "src/html.js", 
        "src/storage.js", 
        "src/text.js", 
        "src/loader.js", 
        "src/math.js", 
        "src/outro.js"
    ]
}

//If You don't want example tab just write "jsfiddle" : "disable",
</pre>
	  	</div>
	</div>
</div>
{% endblock %}

{% block javascripts %}
<script>
</script>
{% endblock %}
